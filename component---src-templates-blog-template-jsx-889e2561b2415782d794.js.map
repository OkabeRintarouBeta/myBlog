{"version":3,"file":"component---src-templates-blog-template-jsx-889e2561b2415782d794.js","mappings":"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","sources":["webpack://gatsby-blog-template/./src/components/Pagination/PaginationItem.jsx","webpack://gatsby-blog-template/./src/components/Pagination/Pagination.jsx","webpack://gatsby-blog-template/./src/components/Post/PostDate.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Article.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostListing.jsx","webpack://gatsby-blog-template/./src/templates/blog-template.jsx"],"sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoLink from \"../AutoLink/AutoLink\";\n\nconst PaginationItem = (props) => {\n  const { value, currentPage, pathPrefix, pathPrefixPagination } = props;\n  const isLeft = value === -1;\n  const isRight = value === -2;\n\n  let to = pathPrefix;\n\n  if (isLeft) {\n    to += `${pathPrefixPagination}/${currentPage - 3}`;\n  } else if (isRight) {\n    to += `${pathPrefixPagination}/${currentPage + 3}`;\n  } else if (value !== 1) {\n    to += `${pathPrefixPagination}/${value}`;\n  }\n\n  return (\n    <AutoLink\n      to={to}\n      className={`pagination-item ${currentPage === value ? \"active\" : \"\"}`}\n      activeClassName=\"active\"\n    >\n      {isLeft && (\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-left\"]} size=\"xs\" />\n      )}\n\n      {value > 0 && value}\n\n      {isRight && (\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} size=\"xs\" />\n      )}\n    </AutoLink>\n  );\n};\n\nexport default PaginationItem;\n","import React from \"react\";\nimport PaginationItem from \"./PaginationItem\";\nimport \"./Pagination.scss\";\n\n// condition: totalPages >= 2\nconst MAX_PAGINATION_ITEMS = 7;\n\nconst PAGINATION_LEFT = -1;\nconst PAGINATION_RIGHT = -2;\n\n// For example: there is 9 pages\n// [1], 2,  3,  4,  5,  -2,  9\n//  1, [2], 3,  4,  5,  -2,  9\n//  1,  2, [3], 4,  5,  -2,  9\n//  1,  2,  3, [4], 5,  -2,  9\n//  1, -1,  4, [5], 6,  -2,  9\n//  1, -1,  5, [6], 7,  -2,  9\n//  1, -1,  5,  6, [7], -2,  9\n//  1, -1,  5,  6,  7,  [8], 9\n//  1, -1,  5,  6,  7,   8, [9]\n\nconst Pagination = (props) => {\n  const {\n    currentPage,\n    totalPages,\n    pathPrefix,\n    pathPrefixPagination,\n    extraClass,\n  } = props;\n\n  const respArr = [];\n  if (totalPages <= MAX_PAGINATION_ITEMS) {\n    for (let i = 1; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else if (currentPage <= 4) {\n    for (let i = 1; i <= MAX_PAGINATION_ITEMS - 2; i++) {\n      respArr.push(i);\n    }\n    respArr.push(PAGINATION_RIGHT, totalPages);\n  } else if (totalPages - currentPage < 4) {\n    respArr.push(1, PAGINATION_LEFT);\n    for (let i = totalPages - 4; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else {\n    respArr.push(\n      1,\n      PAGINATION_LEFT,\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      PAGINATION_RIGHT,\n      totalPages\n    );\n  }\n\n  return (\n    <>\n      {totalPages >= 2 && (\n        <div className={`pagination-container ${extraClass}`}>\n          {respArr.map((value, index) => (\n            <PaginationItem\n              key={`${pathPrefix}-${index}`}\n              value={value}\n              currentPage={currentPage}\n              pathPrefix={pathPrefix}\n              pathPrefixPagination={pathPrefixPagination}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date, extraClass = \"\" }) => (\n  <div className={`text-description ${extraClass}`}>\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport AutoLink from \"../AutoLink/AutoLink\";\n\nconst Thumbnail = ({ post, extraClass = \"\" }) => {\n  const thumbnail = post.cover ? (\n    <AutoLink\n      to={post.slug}\n      key={post.title}\n      className={`thumbnail-wrapper line-height-reset ${extraClass}`}\n    >\n      <GatsbyImage image={getImage(post.cover)} className=\"thumbnail-img\" alt=\"\" />\n    </AutoLink>\n  ) : null;\n\n  return thumbnail;\n};\n\nexport default Thumbnail;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport PostDate from \"../Post/PostDate\";\n\nconst PostInfo = ({ post, extraClass = \"\" }) => (\n  <div className={`post-info-wrapper ${extraClass}`}>\n    <AutoLink to={post.slug} key={post.title}>\n      <h2>\n        <small>{post.title}</small>\n      </h2>\n    </AutoLink>\n    <div className=\"margin-bottom-half\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;\n","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\nimport \"./Article.scss\";\n\nconst Article = ({ post, hasThumbnail }) => (\n  <article\n    key={post.title}\n    className=\"article-container padding-bottom-2 padding-top-2 border-bottom border-color-light-grey\"\n  >\n    {hasThumbnail && <Thumbnail post={post} />}\n    <PostInfo post={post} />\n  </article>\n);\n\nexport default Article;\n","import React, { Component } from \"react\";\nimport Article from \"./Article\";\n\nclass PostListing extends Component {\n  state = {\n    maxPosts:\n      (this.props.hasLoadmore || this.props.forcePostsPerPage) &&\n      this.props.postsPerPage\n        ? this.props.postsPerPage\n        : this.props.postList.length,\n  };\n\n  handleLoadmore = () => {\n    const { hasLoadmore = false, numberLoadmore } = this.props;\n\n    if (!hasLoadmore) return;\n\n    this.setState((prevState) => ({\n      maxPosts: prevState.maxPosts + numberLoadmore,\n    }));\n  };\n\n  render() {\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\n    const { maxPosts } = this.state;\n\n    return (\n      <>\n        <div className=\"post-listing-container\">\n          {postList.map((post, index) => {\n            if (index < maxPosts)\n              return (\n                <Article\n                  key={post.title}\n                  post={post}\n                  hasThumbnail={hasThumbnail}\n                />\n              );\n\n            return null;\n          })}\n        </div>\n        {hasLoadmore && maxPosts < postList.length && (\n          <div className=\"loadmore-wrapper margin-top padding-top-half text-center\">\n            <button className=\"btn-primary\" onClick={this.handleLoadmore}>\n              {this.props.btnLoadmore}\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { getPostList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\nimport \"katex/dist/katex.min.css\"\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\n\nconst BlogTemplate = ({ data, pageContext }) => {\n  const { categoryList, tagList, latestPostEdges, currentPage, totalPages } =\n    pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const postList = getPostList(postEdges);\n  const content = (\n    <>\n      <PostListing\n        postList={postList}\n        hasThumbnail={config.blogHasThumbnail}\n        hasLoadmore={false}\n      />\n      <Pagination\n        extraClass=\"margin-top padding-top-half\"\n        currentPage={currentPage}\n        totalPages={totalPages}\n        pathPrefix={config.pathPrefixBlog}\n        pathPrefixPagination={config.pathPrefixPagination}\n      />\n    </>\n  );\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n\n  return (\n    <Layout>\n      <div className=\"blog-container\">\n        <Helmet title={`${config.blogHeader} - ${config.siteTitle}`} />\n        <MainContainer content={content} sidebar={sidebar} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPage($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","value","currentPage","pathPrefix","pathPrefixPagination","isLeft","isRight","to","React","AutoLink","className","activeClassName","FontAwesomeIcon","icon","size","totalPages","extraClass","respArr","i","push","MAX_PAGINATION_ITEMS","map","index","PaginationItem","key","_ref","date","_ref$extraClass","config","formatDate","post","cover","slug","title","GatsbyImage","image","getImage","alt","excerpt","PostDate","hasThumbnail","Thumbnail","PostInfo","PostListing","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","maxPosts","hasLoadmore","forcePostsPerPage","postsPerPage","postList","handleLoadmore","_this$props","_this$props$hasLoadmo","numberLoadmore","setState","prevState","_inheritsLoose","prototype","render","_this$props2","this","_this$props2$hasThumb","_this$props2$hasLoadm","Article","onClick","btnLoadmore","Component","deckDeckGoHighlightElement","data","pageContext","categoryList","tagList","latestPostEdges","postEdges","allMarkdownRemark","edges","getPostList","content","Pagination","sidebar","Sidebar","links","Layout","Helmet","MainContainer"],"sourceRoot":""}